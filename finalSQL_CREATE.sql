-- [INDEX] -- 
-- 1. MEMBER
-- 2. CATEGORY
-- 3. BOARD
-- 4. COMMENT
-- 5. BOARD_IMG
-- 6. CLASS_SCHEDULE
-- 7. CLASS_PEOPLE
-- 8. LIBRARY_ANOTHER
-- 9. CALENDAR
-- 10. RESERVATION_PLACE
-- 11. FOOD_TYPE
-- 12. FOOD
-- 13. PAY
-- 14. BOOK_REQUEST
-- 15. BOOK
-- 16. BOOK_LIKE
-- 17. B_RESERVATION
-- 18. BORROW
-- 19. AUTH_KEY

-- [DROP 구간] -- 
DROP SEQUENCE SEQ_AUTH_KEY_NO;
DROP TABLE AUTH_KEY;

DROP SEQUENCE SEQ_BOR_NO;
DROP TABLE BORROW;

DROP SEQUENCE SEQ_BRESERVATION_NO;
DROP TABLE B_RESERVATION;

DROP TABLE BOOK_LIKE;

DROP SEQUENCE SEQ_BOOK_NO;
DROP TABLE BOOK;

DROP SEQUENCE SEQ_RBOOK_NO;
DROP TABLE BOOK_REQUEST;

DROP TABLE PAY;

DROP SEQUENCE SEQ_FOOD_NO;
DROP TABLE FOOD;

DROP TABLE FOOD_TYPE;

DROP SEQUENCE SEQ_RESERVATION_NO;
DROP TABLE RESERVATION_PLACE;

DROP SEQUENCE SEQ_CALENDAR_NO;
DROP TABLE CALENDAR;

DROP TABLE LIBRARY_ANOTHER;

DROP TABLE CLASS_PEOPLE;

DROP TABLE CLASS_SCHEDULE;

DROP SEQUENCE SEQ_IMG_NO;
DROP TABLE BOARD_IMG;

DROP SEQUENCE SEQ_COMMENT_NO;
DROP TABLE "COMMENT";

DROP SEQUENCE SEQ_BOARD_NO;
DROP TABLE BOARD;

DROP SEQUENCE SEQ_CAT_CODE;
DROP TABLE "CATEGORY";

DROP SEQUENCE SEQ_MEMBER_NO;
DROP TABLE "MEMBER";

--------------------------------------------------------------------------------
--- [MEMBER] ---
CREATE TABLE "MEMBER" (
	"MEMBER_NO"	        NUMBER	CONSTRAINT PK_MEMBER_MEMBER_NO PRIMARY KEY,
	"MEMBER_EMAIL"	    VARCHAR2(50) NOT NULL,
	"MEMBER_PW"	        VARCHAR2(100)  NOT NULL,
	"MEMBER_NAME"	    NVARCHAR2(6)  NOT NULL,
	"MEMBER_PNO"	    VARCHAR2(11)  NOT NULL,
	"MEMBER_GENDER"	    CHAR(1)  CHECK(MEMBER_GENDER IN ('F', 'M')) NOT NULL,
	"MEMBER_DOB"	    CHAR(8)  NOT NULL,
	"MEMBER_ADDR"	    VARCHAR2(300),
	"MEMBER_DEL_FL"	    CHAR(1)	    DEFAULT 'N'	CHECK(MEMBER_DEL_FL IN ('Y', 'N')) NOT NULL,
	"ENROLL_DT"	        DATE	 DEFAULT SYSDATE	NOT NULL,
	"AUTHORITY"	        NUMBER	 DEFAULT 1  CHECK(AUTHORITY IN (1, 2)) NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 번호 (SEQ_MEMBER_NO)';
COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';
COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호(암호화 적용)';
COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원 이름(실명)';
COMMENT ON COLUMN "MEMBER"."MEMBER_PNO" IS '전화번호(- 없음)';
COMMENT ON COLUMN "MEMBER"."MEMBER_GENDER" IS '회원 성별(여자 : F, 남자 : M)';
COMMENT ON COLUMN "MEMBER"."MEMBER_DOB" IS '생년월일(8자리)';
COMMENT ON COLUMN "MEMBER"."MEMBER_ADDR" IS '회원 주소';
COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '탈퇴 여부(N: 탈퇴X, Y: 탈퇴O)';
COMMENT ON COLUMN "MEMBER"."ENROLL_DT" IS '회원 가입일';
COMMENT ON COLUMN "MEMBER"."AUTHORITY" IS '(1:일반, 2:관리자)';

CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;

--- [CATEGORY] ---
CREATE TABLE "CATEGORY" (
	"CAT_CODE" NUMBER	CONSTRAINT PK_CATEGORY_CAT_CODE PRIMARY KEY,
	"CAT_NAME"  NVARCHAR2(50) NOT NULL,
	"PARENT_CODE"	NUMBER
);

COMMENT ON COLUMN "CATEGORY"."CAT_CODE" IS '게시판 코드(SEQ_CAT_CODE)';
COMMENT ON COLUMN "CATEGORY"."CAT_NAME" IS '게시판 이름';
COMMENT ON COLUMN "CATEGORY"."PARENT_CODE" IS '부모 게시판 코드';

CREATE SEQUENCE SEQ_CAT_CODE NOCACHE;

--- [BOARD] ---
CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER	CONSTRAINT PK_BOARD_BOARD_NO PRIMARY KEY,
	"MEMBER_NO"	NUMBER	CONSTRAINT FK_BOARD_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
	"CAT_CODE"	NUMBER	CONSTRAINT FK_CATEGORY_CAT_CODE REFERENCES CATEGORY(CAT_CODE) ON DELETE CASCADE NOT NULL,
	"BOARD_TITLE"	VARCHAR2(150)		NOT NULL,
	"BOARD_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"B_CREATE_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"B_UPDATE_DT"	DATE,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N' CHECK(BOARD_DEL_FL IN ('Y', 'N')) NOT NULL,
	"BOARD_SC_FL"	CHAR(1)	DEFAULT 'N'	CHECK(BOARD_SC_FL IN ('Y', 'N')) NOT NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';
COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "BOARD"."CAT_CODE" IS '게시판 코드(SEQ_CAT_CODE)';
COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '주도 = 도서관 이름';
COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '주도 = 도서관 소개';
COMMENT ON COLUMN "BOARD"."B_CREATE_DT" IS '작성일';
COMMENT ON COLUMN "BOARD"."B_UPDATE_DT" IS '마지막 수정일';
COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';
COMMENT ON COLUMN "BOARD"."BOARD_DEL_FL" IS '게시글 상태(정상:  N, 삭제: Y)';
COMMENT ON COLUMN "BOARD"."BOARD_SC_FL" IS '게시글 비공개(공개: N, 비공개: Y)';

CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;

--- [COMMENT] ---
CREATE TABLE "COMMENT" (
   "COMMENT_NO"   NUMBER CONSTRAINT PK_COMMENT_COMMENT_NO PRIMARY KEY,
   "MEMBER_NO"   NUMBER  CONSTRAINT FK_COMMENT_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "BOARD_NO"   NUMBER   CONSTRAINT FK_COMMENT_BOARD_NO REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE NOT NULL,
   "COMMENT_CONTENT"   VARCHAR2(2000)      NOT NULL,
   "C_CREATE_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "COMMENT_DEL_FL"   CHAR(1)   DEFAULT 'N' CHECK(COMMENT_DEL_FL IN ('Y', 'N')) NOT NULL
);

COMMENT ON COLUMN "COMMENT"."COMMENT_NO" IS '댓글 번호(SEQ_COMMNET_NO)';
COMMENT ON COLUMN "COMMENT"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "COMMENT"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';
COMMENT ON COLUMN "COMMENT"."COMMENT_CONTENT" IS '댓글 내용';
COMMENT ON COLUMN "COMMENT"."C_CREATE_DT" IS '작성일';
COMMENT ON COLUMN "COMMENT"."COMMENT_DEL_FL" IS '댓글 상태(정상: N, 삭제: Y)';

CREATE SEQUENCE SEQ_COMMENT_NO NOCACHE;

-- [BOARD_IMG] --
CREATE TABLE "BOARD_IMG" (
   "IMG_NO"   NUMBER  CONSTRAINT PK_BOARD_IMG_IMG_NO PRIMARY KEY,
   "BOARD_NO"   NUMBER  CONSTRAINT FK_BOARD_IMG_BOARD_NO REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE NOT NULL,
   "IMG_PATH" VARCHAR2(500)      NOT NULL,
   "IMG_ORIGINAL"   VARCHAR2(500)      NOT NULL,
   "IMG_RENAME"   VARCHAR2(500)      NOT NULL,
   "IMG_ORDER"   NUMBER      NOT NULL
);

COMMENT ON COLUMN "BOARD_IMG"."IMG_NO" IS '이미지 번호(SEQ_IMG_NO)';
COMMENT ON COLUMN "BOARD_IMG"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';
COMMENT ON COLUMN "BOARD_IMG"."IMG_PATH" IS '이미지 저장경로';
COMMENT ON COLUMN "BOARD_IMG"."IMG_ORIGINAL" IS '이미지 원본명';
COMMENT ON COLUMN "BOARD_IMG"."IMG_RENAME" IS '변경명';
COMMENT ON COLUMN "BOARD_IMG"."IMG_ORDER" IS '이미지 위치 지정 순서';

CREATE SEQUENCE SEQ_IMG_NO NOCACHE;

-- [CLASS_SCHEDULE] --
CREATE TABLE "CLASS_SCHEDULE" (
   "BOARD_NO"   NUMBER CONSTRAINT PFK_CLASS_SCHEDULE_BOARD_NO REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE PRIMARY KEY,
   "START_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "END_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "RECRUITMENT_START_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "RECRUITMENT_END_DT"   DATE      NOT NULL,
   "MAX_PARTICIPANTS"   NUMBER      NOT NULL
);

COMMENT ON COLUMN "CLASS_SCHEDULE"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';
COMMENT ON COLUMN "CLASS_SCHEDULE"."START_DT" IS '클래스 시작일';
COMMENT ON COLUMN "CLASS_SCHEDULE"."END_DT" IS '클래스 종료일';
COMMENT ON COLUMN "CLASS_SCHEDULE"."RECRUITMENT_START_DT" IS '신청시작일';
COMMENT ON COLUMN "CLASS_SCHEDULE"."RECRUITMENT_END_DT" IS '신청 종료일';
COMMENT ON COLUMN "CLASS_SCHEDULE"."MAX_PARTICIPANTS" IS '신청 최대 인원수';

-- [CLASS_PEOPLE] --
CREATE TABLE "CLASS_PEOPLE" (
   "MEMBER_NO"   NUMBER  CONSTRAINT PFK_CLASS_PEOPLE_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "BOARD_NO"   NUMBER   CONSTRAINT PFK_CLASS_PEOPLE_BOARD_NO REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE NOT NULL,
   CONSTRAINT CK_CLASS_PEOPLE_MEMBER_NO PRIMARY KEY(MEMBER_NO, BOARD_NO)
);

COMMENT ON COLUMN "CLASS_PEOPLE"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "CLASS_PEOPLE"."BOARD_NO" IS 'SEQ_BOARD_NO';

-- [LIBRARY_ANOTHER] --
CREATE TABLE "LIBRARY_ANOTHER" (
   "BOARD_NO"  NUMBER CONSTRAINT PFK_LIBRARY_ANOTHER_BOARD_NO REFERENCES BOARD(BOARD_NO) PRIMARY KEY,
   "LIBRARY_ADDRESS"   VARCHAR2(500)      NOT NULL,
   "LIBRARY_LATITUDE"   VARCHAR2(50)      NOT NULL,
   "LIBRARY_LONGITUDE"   VARCHAR2(50)      NOT NULL
);

COMMENT ON COLUMN "LIBRARY_ANOTHER"."BOARD_NO" IS '게시글 번호(SEQ_BOARD_NO)';
COMMENT ON COLUMN "LIBRARY_ANOTHER"."LIBRARY_ADDRESS" IS '도서관 주소';
COMMENT ON COLUMN "LIBRARY_ANOTHER"."LIBRARY_LATITUDE" IS '도서관 위도';
COMMENT ON COLUMN "LIBRARY_ANOTHER"."LIBRARY_LONGITUDE" IS '도서관 경도';

-- [CALENDAR] --
CREATE TABLE "CALENDAR" (
   "CALENDAR_NO"   NUMBER  CONSTRAINT PK_CALENDAR_CALENDAR_NO PRIMARY KEY,
   "CALENDAR_NAME"   VARCHAR2(100)      NOT NULL,
   "START_DT"   DATE      NOT NULL,
   "END_DT"   DATE,
   "CALENDAR_TYPE"   NUMBER CHECK(CALENDAR_TYPE IN ('1', '2', '3')) NOT NULL
);

COMMENT ON COLUMN "CALENDAR"."CALENDAR_NO" IS 'SEQ_CALENDER_NO';
COMMENT ON COLUMN "CALENDAR"."CALENDAR_TYPE" IS '1-공휴일, 2-휴관일, 3-행사';

CREATE SEQUENCE SEQ_CALENDAR_NO NOCACHE;

-- [RESERVATION_PLACE] --
CREATE TABLE "RESERVATION_PLACE" (
   "RESERVATION_NO"   NUMBER CONSTRAINT PK_RESERVATION_PLACE_RESERVATION_NO PRIMARY KEY,
   "MEMBER_NO"   NUMBER CONSTRAINT FK_RESERVATION_PLACE_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "SEAT_NO"   NUMBER,
   "RESERVATION_DT"   DATE  NOT NULL,
   "START_TIME"   DATE  NOT NULL,
   "END_TIME"   DATE   NOT NULL
);

COMMENT ON COLUMN "RESERVATION_PLACE"."RESERVATION_NO" IS '예약 번호(SEQ_RESERVATION_NO)';
COMMENT ON COLUMN "RESERVATION_PLACE"."MEMBER_NO" IS '회원 번호 (SEQ_MEMBER_NO)';
COMMENT ON COLUMN "RESERVATION_PLACE"."SEAT_NO" IS '좌석 번호(1~32)';
COMMENT ON COLUMN "RESERVATION_PLACE"."RESERVATION_DT" IS '예약 날짜';
COMMENT ON COLUMN "RESERVATION_PLACE"."START_TIME" IS '예약 시작 시간';
COMMENT ON COLUMN "RESERVATION_PLACE"."END_TIME" IS '예약 종료 시간';

CREATE SEQUENCE SEQ_RESERVATION_NO NOCACHE;

-- [FOOD_TYPE] --
CREATE TABLE "FOOD_TYPE" (
   "TYPE_NO"   NUMBER  CONSTRAINT PK_FOOD_TYPE_TYPE_NO PRIMARY KEY,
   "TYPE_NAME"   VARCHAR2(150)  NOT NULL
);

COMMENT ON COLUMN "FOOD_TYPE"."TYPE_NO" IS '0 : 백반, 1: 분식,  2: 커피';

-- [FOOD] --
CREATE TABLE "FOOD" (
   "FOOD_NO"   NUMBER  CONSTRAINT PK_FOOD_FOOD_NO PRIMARY KEY,
   "TYPE_NO"   NUMBER    CONSTRAINT FK_FOODE_TYPE_NO REFERENCES FOOD_TYPE(TYPE_NO) ON DELETE CASCADE NOT NULL,
   "FOOD_NAME"   VARCHAR2(150)   NOT NULL,
   "FOOD_PRICE"   NUMBER   DEFAULT 6000   NOT NULL,
   "FOOD_DEL_ST"   CHAR(1)   DEFAULT 'N'  CHECK(FOOD_DEL_ST IN ('Y', 'N')) NOT NULL,
   "FOOD_IMG"   VARCHAR2(500)    NULL,
   "FOOD_DES"   VARCHAR2(4000)   NULL
);

COMMENT ON COLUMN "FOOD"."FOOD_NO" IS '음식 번호(SEQ_FOOD_NO)';
COMMENT ON COLUMN "FOOD"."TYPE_NO" IS '0 : 백반, 1: 분식,  2: 커피';
COMMENT ON COLUMN "FOOD"."FOOD_NAME" IS '음식명';
COMMENT ON COLUMN "FOOD"."FOOD_PRICE" IS '음식 가격';
COMMENT ON COLUMN "FOOD"."FOOD_DEL_ST" IS 'Y : 음식 삭제, N : 음식 존재';
COMMENT ON COLUMN "FOOD"."FOOD_IMG" IS '백반일 경우 이미지 X';
COMMENT ON COLUMN "FOOD"."FOOD_DES" IS '카페일 경우만 설명 o';

CREATE SEQUENCE SEQ_FOOD_NO NOCACHE;

-- [PAY] -- 
CREATE TABLE "PAY" (
   "MEMBER_NO"   NUMBER  CONSTRAINT FK_PAY_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "FOOD_NO"   NUMBER    CONSTRAINT FK_PAY_FOOD_NO REFERENCES FOOD(FOOD_NO) ON DELETE CASCADE NOT NULL,
   "PAY_DATE"   DATE   DEFAULT SYSDATE   NOT NULL,
   "FOOD_QTY"   NUMBER   DEFAULT 0   NOT NULL
);

COMMENT ON COLUMN "PAY"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "PAY"."FOOD_NO" IS '음식 번호(SEQ_FOOD_NO)';
COMMENT ON COLUMN "PAY"."PAY_DATE" IS '결제일시';
COMMENT ON COLUMN "PAY"."FOOD_QTY" IS '메뉴 수량';

-- [BOOK_REQUEST] --
CREATE TABLE "BOOK_REQUEST" (
   "REQ_BOOK_NO"   NUMBER CONSTRAINT PK_BOOK_REQUEST_REQ_BOOK_NO PRIMARY KEY,
   "MEMBER_NO"  NUMBER  CONSTRAINT FK_BOOK_REQUEST_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "BOOK_AUTHOR"   VARCHAR2(500)      NOT NULL,
   "BOOK_TITLE"   VARCHAR2(1000)      NOT NULL,
   "BOOK_PUB"   VARCHAR2(500)      NOT NULL,
   "REQ_TITLE"   VARCHAR2(500)      NOT NULL,
   "REQ_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "REQ_APPROVE"   CHAR(1)   DEFAULT 'W'   CHECK(REQ_APPROVE IN ('W', 'Y', 'N')) NOT NULL,
   "PUB_DT"   DATE      NULL,
   "REQ_OPINION"   VARCHAR2(3000)      NULL
);

COMMENT ON COLUMN "BOOK_REQUEST"."REQ_BOOK_NO" IS '신청도서번호(SEQ_R_BOOK_NO)';
COMMENT ON COLUMN "BOOK_REQUEST"."MEMBER_NO" IS '회원 번호 (SEQ_MEMBER_NO)';
COMMENT ON COLUMN "BOOK_REQUEST"."BOOK_AUTHOR" IS '저자';
COMMENT ON COLUMN "BOOK_REQUEST"."BOOK_TITLE" IS '도서명';
COMMENT ON COLUMN "BOOK_REQUEST"."BOOK_PUB" IS '출판사';
COMMENT ON COLUMN "BOOK_REQUEST"."REQ_TITLE" IS '신청서 작성 제목';
COMMENT ON COLUMN "BOOK_REQUEST"."REQ_DT" IS '신청서 작성일';
COMMENT ON COLUMN "BOOK_REQUEST"."REQ_APPROVE" IS '승인여부(대기:W, 승인:Y, 거절:N)';
COMMENT ON COLUMN "BOOK_REQUEST"."PUB_DT" IS '출판일자';
COMMENT ON COLUMN "BOOK_REQUEST"."REQ_OPINION" IS '추천의견';

CREATE SEQUENCE SEQ_RBOOK_NO NOCACHE;

-- [BOOK] --
CREATE TABLE "BOOK" (
   "BOOK_NO"   NUMBER   CONSTRAINT PK_BOOK_BOOK_NO PRIMARY KEY,
   "BOOK_AUTHOR"   VARCHAR2(500)      NOT NULL,
   "BOOK_TITLE"   VARCHAR2(1000)      NOT NULL,
   "BOOK_PUB"   VARCHAR2(500)      NOT NULL,
   "BOOK_PUB_DT"   CHAR(4)      NOT NULL,
   "BOOK_ISBN"   VARCHAR2(100)      NOT NULL,
   "BOOK_THUMBNAIL"   VARCHAR2(500)      NOT NULL,
   "BOOK_STATE"   CHAR(1)   DEFAULT 'P'    CHECK(BOOK_STATE IN ('P', 'I')) NOT NULL,
   "BOOK_SUPPLE"   CHAR(1)   DEFAULT 'N'   CHECK(BOOK_SUPPLE IN ('Y', 'N')) NOT NULL
);

COMMENT ON COLUMN "BOOK"."BOOK_NO" IS '도서 번호 (SEQ_BOOK_NO)';
COMMENT ON COLUMN "BOOK"."BOOK_AUTHOR" IS '저자';
COMMENT ON COLUMN "BOOK"."BOOK_TITLE" IS '도서명';
COMMENT ON COLUMN "BOOK"."BOOK_PUB" IS '출판사';
COMMENT ON COLUMN "BOOK"."BOOK_PUB_DT" IS '발행일';
COMMENT ON COLUMN "BOOK"."BOOK_ISBN" IS 'ISBN';
COMMENT ON COLUMN "BOOK"."BOOK_THUMBNAIL" IS '도서표지';
COMMENT ON COLUMN "BOOK"."BOOK_STATE" IS '대출가능: P / 대출 불가: I';
COMMENT ON COLUMN "BOOK"."BOOK_SUPPLE" IS '부록 보유여부 (N:  없음, Y :있음)';

CREATE SEQUENCE SEQ_BOOK_NO NOCACHE;

-- [BOOK_LIKE] --
CREATE TABLE "BOOK_LIKE" (
   "MEMBER_NO"   NUMBER   CONSTRAINT PFK_BOOK_LIKE_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "BOOK_NO"   NUMBER     CONSTRAINT PFK_BOOK_LIKE_BOOK_NO REFERENCES BOOK(BOOK_NO) ON DELETE CASCADE NOT NULL,
   CONSTRAINT CK_BOOK_LIKE_MEMBER_BOOK_NO PRIMARY KEY(MEMBER_NO, BOOK_NO)
);

COMMENT ON COLUMN "BOOK_LIKE"."MEMBER_NO" IS '회원 번호 (SEQ_MEMBER_NO)';
COMMENT ON COLUMN "BOOK_LIKE"."BOOK_NO" IS '도서 번호 (SEQ_BOOK_NO)';

-- [B_RESERVATION] --
CREATE TABLE "B_RESERVATION" (
   "RESERVATION_NO"   NUMBER  CONSTRAINT PK_B_RESERVATION_RESERVATION_NO PRIMARY KEY,
   "BOOK_NO"   NUMBER       CONSTRAINT FK_B_RESRVATION_BOOK_NO REFERENCES BOOK(BOOK_NO) ON DELETE CASCADE NOT NULL,
   "MEMBER_NO"   NUMBER     CONSTRAINT FK_B_RESRVATION_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "RESERVATION_DT"   DATE   DEFAULT SYSDATE   NOT NULL
);

COMMENT ON COLUMN "B_RESERVATION"."RESERVATION_NO" IS '예약 번호(RESERVATION_NO)';
COMMENT ON COLUMN "B_RESERVATION"."BOOK_NO" IS '도서 번호(SEQ_BOOK_NO)';
COMMENT ON COLUMN "B_RESERVATION"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "B_RESERVATION"."RESERVATION_DT" IS '예약일';

CREATE SEQUENCE SEQ_BRESERVATION_NO NOCACHE;

-- [BORROW] --
CREATE TABLE "BORROW" (
   "BORROW_NO"   NUMBER   CONSTRAINT PK_BORROW_BORROW_NO PRIMARY KEY,
   "BOOK_NO"   NUMBER       CONSTRAINT FK_BORROW_BOOK_NO REFERENCES BOOK(BOOK_NO) ON DELETE CASCADE NOT NULL,
   "MEMBER_NO"   NUMBER     CONSTRAINT FK_BORROW_MEMBER_NO REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE NOT NULL,
   "BORROW_DT"   DATE   DEFAULT SYSDATE   NOT NULL,
   "RETURN_DUE_DT"   DATE DEFAULT SYSDATE + 14 NOT NULL,
   "RETURN_DT"   DATE
);

COMMENT ON COLUMN "BORROW"."BORROW_NO" IS '대여 번호(SEQ_BOR_NO)';
COMMENT ON COLUMN "BORROW"."BOOK_NO" IS '도서 번호 (SEQ_BOOK_NO)';
COMMENT ON COLUMN "BORROW"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';
COMMENT ON COLUMN "BORROW"."BORROW_DT" IS '대출일자';
COMMENT ON COLUMN "BORROW"."RETURN_DUE_DT" IS '반납 예정일';
COMMENT ON COLUMN "BORROW"."RETURN_DT" IS '반납일자';

CREATE SEQUENCE SEQ_BOR_NO NOCACHE;

-- [AUTH_KEY] --
CREATE TABLE "AUTH_KEY" (
   "AUTH_KEY_NO"   NUMBER   CONSTRAINT PK_AUTH_KEY_AUTH_KEY_NO PRIMARY KEY,
   "CODE"   CHAR(6)      NOT NULL,
   "CREATE_TIME"   DATE   DEFAULT SYSDATE   NOT NULL,
   "EMAIL"   VARCHAR2(50)      NOT NULL
);

COMMENT ON COLUMN "AUTH_KEY"."AUTH_KEY_NO" IS '인증키 번호(SEQ_AUTH_KEY_NO)';
COMMENT ON COLUMN "AUTH_KEY"."CODE" IS '코드';
COMMENT ON COLUMN "AUTH_KEY"."CREATE_TIME" IS '인증 코드 생성 시간';
COMMENT ON COLUMN "AUTH_KEY"."EMAIL" IS '이메일';

CREATE SEQUENCE SEQ_AUTH_KEY_NO NOCACHE;
COMMIT;