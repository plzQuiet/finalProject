<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="introMapper">

	<resultMap type="Board" id="board_rm">
   
      <id property="boardNo" column="BOARD_NO"/>
      
      <result property="boardTitle" column="BOARD_TITLE"/>
      <result property="boardContent" column="BOARD_CONTENT"/>
      <result property="boardCreateDate" column="B_CREATE_DT"/>
      <result property="boardUpdateDate" column="B_UPDATE_DT"/>
      <result property="readCount" column="READ_COUNT"/>
      <result property="boardDeleteFlag" column="BOARD_DEL_FL"/>
      <result property="boardScreatFlag" column="BOARD_SC_FL"/>
      <result property="memberNo" column="MEMBER_NO"/>
      <result property="memberName" column="MEMBER_NAME"/>
      <result property="cateCode" column="CAT_CODE"/>
      
      <collection property="imageList" 
      				select="selectImageList" 
      				column="BOARD_NO"
      				javaType="java.util.ArrayList"
      				ofType="BoardImage">
      </collection>
      
   </resultMap>
   
    <!-- BoardImage DTO에 대한 resultMap -->
   <resultMap type="BoardImage" id="boardImage_rm">
   	<id property="imageNo" column="IMG_NO"/>
   	
   	<result property="boardNo" column="BOARD_NO"/>
   	<result property="imagePath" column="IMG_PATH"/>
   	<result property="imageOriginal" column="IMG_ORIGINAL"/>
   	<result property="imageReName" column="IMG_RENAME"/>
   	<result property="imageOrder" column="IMG_ORDER"/>
   </resultMap>
   
   <!-- LibAnother DTO에 대한 resultMap -->
   <resultMap type="LibAnother" id="libAnother_rm">
   	<id property="boardNo" column="BOARD_NO"/>
   	
   	<result property="libraryAddress" column="LIBRARY_ADDRESS"/>
   	<result property="searchLat" column="LIBRARY_LATITUDE"/>
   	<result property="searchLng" column="LIBRARY_LONGITUDE"/>
   	
   </resultMap>
   
   <!-- Calendar DTO에 대한 resultMap -->
   <resultMap type="Calendar" id="calendar_rm">
   	<id property="calendarNo" column="CALENDAR_NO"/>
   	
   	<result property="calendarName" column="CALENDAR_NAME"/>
   	<result property="startDt" column="START_DT"/>
   	<result property="endDt" column="END_DT"/>
   	<result property="rstartDt" column="RECRUITMENT_START_DT"/>
   	<result property="rendDt" column="RECRUITMENT_END_DT"/>
   	<result property="calendarType" column="CALENDAR_TYPE"/>
   
   </resultMap>

	<!-- 카테고리 가져오기 -->
	<select id="selectCategoryList" resultType="map">
		SELECT LEVEL , C.* FROM
		    (SELECT * FROM CATEGORY) C
		START WITH PARENT_CODE IS NULL
		CONNECT BY PRIOR CAT_CODE = PARENT_CODE
		ORDER SIBLINGS BY PARENT_CODE
	</select>
	
	<!-- 도서관 명 가져오기 -->
	<select id="getAnLib" parameterType="_int" resultType="map">
		SELECT BOARD_NO, BOARD_TITLE FROM BOARD
		WHERE CAT_CODE = #{catLevel3}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO
	</select>
	
	<!-- 주변 도서관 삽입 -->
	<insert id="anLibInsert" parameterType="Board" useGeneratedKeys="true">
		
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO BOARD
		VALUES (#{boardNo},
				#{memberNo},
				#{cateCode},
				#{boardTitle},
				#{boardContent},
				DEFAULT, NULL, DEFAULT, DEFAULT, DEFAULT
		)
	
	</insert>
	
	<!-- 주변 도서관 이미지 리스트(여러개) 삽입 -->
	<insert id="insertImageList" parameterType="list">
		INSERT INTO BOARD_IMG
		SELECT SEQ_IMG_NO.NEXTVAL, A.*
		FROM (
		
			<foreach collection="list" item="img" separator=" UNION ALL ">
				SELECT 
				#{img.boardNo} BOARD_NO, 
				#{img.imagePath} IMG_PATH,
				#{img.imageOriginal} IMG_ORIGINAL, 
				#{img.imageReName} IMG_RENAME,
				#{img.imageOrder} IMG_ORDER
				FROM DUAL
			</foreach>
		)A
	
	</insert>
	
	<insert id="insertLibAn" parameterType="LibAnother">
		INSERT INTO LIBRARY_ANOTHER
		VALUES( #{boardNo},
				#{libraryAddress},
				#{searchLat},
				#{searchLng}
		)
	</insert>
	
	<!-- 주변 도서관 상세 조회 -->
	<select id="getAnLibBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT
		FROM BOARD
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_NO = ${boardNo}
		AND CAT_CODE = ${catLevel3}
	</select>
	
	<!-- 주변 도서관 이미지 조회 -->
	<select id="selectImageList" resultMap="boardImage_rm">
		SELECT * FROM BOARD_IMG
		WHERE BOARD_NO = ${boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	<!-- 주변 도서관 주소, 위도, 경도 -->
	<select id="getAnAdd" resultMap="libAnother_rm">
		SELECT * FROM LIBRARY_ANOTHER
		JOIN BOARD USING(BOARD_NO)
		WHERE BOARD_NO = ${boardNo}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 주변 도서관 제목 내용 수정 -->
	<update id="updateLibAn">
		UPDATE BOARD SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		B_UPDATE_DT = SYSDATE
		WHERE CAT_CODE = ${cateCode}
		AND BOARD_NO = ${boardNo}
	</update>
	
	<!-- 주변 도서관 수정시 이미지 삭제 -->
	<delete id="deleteImageList">
		DELETE FROM BOARD_IMG
		WHERE BOARD_NO = ${boardNo}
		AND IMG_ORDER IN(${deleteList})
	</delete>
	
	<!-- 주변 도서관 수정시 이미지 수정 -->
	<update id="updateImage">
		UPDATE BOARD_IMG SET
		IMG_RENAME = #{imageReName},
		IMG_ORIGINAL = #{imageOriginal}
		WHERE BOARD_NO = ${boardNo}
		AND IMG_ORDER = ${imageOrder}
	</update>
	
	<!-- 주변 도서관 수정시 이미지 삽입 -->
	<insert id="insertImage">
		INSERT INTO BOARD_IMG
		VALUES(SEQ_IMG_NO.NEXTVAL,
			#{boardNo},
			#{imagePath},
			#{imageOriginal},
			#{imageReName},
			#{imageOrder}
		)
	</insert>
	
	<!-- 주변 도서관 수정시 주소, 위도, 경도 수정 -->
	<update id="updateLibAdd">
		UPDATE LIBRARY_ANOTHER SET
		LIBRARY_ADDRESS = #{libraryAddress},
		LIBRARY_LATITUDE = #{searchLat},
		LIBRARY_LONGITUDE = #{searchLng}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 주변 도서관 삭제 -->
	<update id="deleteLibAdd">
		UPDATE BOARD SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = ${boardNo}
	</update>
	
	<!-- ********************************************************************************** -->
	<!-- 일정 타입별로 가져오기 -->
	<!-- 반드시 END_DT가 있을 경우 +1 해야함
		fullcalendar에서 END_DT보다 하루 늦게 표시
	 -->
	<select id="getTypeCalendar" resultMap="calendar_rm">
		SELECT CALENDAR_NO, CALENDAR_NAME, 
		    TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
		    TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT,
		    CALENDAR_TYPE
		FROM CALENDAR
		WHERE CALENDAR_TYPE = ${type}
	</select>
	
	<!-- 일정 중 클래스 일정 가져오기 -->
	<select id="getCalendarClass" resultMap="calendar_rm">
		SELECT  S.BOARD_NO CALENDAR_NO,
				(SELECT BOARD_TITLE FROM BOARD C WHERE C.BOARD_NO = B.BOARD_NO) CALENDAR_NAME,
		        TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
		        TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT
		FROM CLASS_SCHEDULE S
		JOIN BOARD B ON(B.BOARD_NO = S.BOARD_NO)
	</select>
	
	<!-- 일정 중 클래스 특정일 일정 가져오기 -->
	<select id="getDateClass" resultMap="calendar_rm">
	SELECT S.BOARD_NO CALENDAR_NO,
	        (SELECT BOARD_TITLE FROM BOARD C WHERE C.BOARD_NO = B.BOARD_NO) CALENDAR_NAME,
	        TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
	        TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT,
	        TO_CHAR(RECRUITMENT_START_DT,'YYYY-MM-DD') RECRUITMENT_START_DT,
	        TO_CHAR(RECRUITMENT_END_DT,'YYYY-MM-DD') RECRUITMENT_END_DT
	FROM CLASS_SCHEDULE S
	JOIN BOARD B ON(B.BOARD_NO = S.BOARD_NO)
	WHERE ( TO_CHAR( START_DT, 'YYYY-MM-DD') IN(#{startDt}) OR TO_CHAR(END_DT, 'YYYY-MM-DD') IN(#{startDt}) 
	OR #{startDt} BETWEEN TO_CHAR( START_DT, 'YYYY-MM-DD') AND TO_CHAR(END_DT, 'YYYY-MM-DD') )
	</select>
	
	<!-- 일정 중 타입별 특정일 일정 가져오기 -->
	<select id="getDateCalendar" resultMap="calendar_rm">
	SELECT CALENDAR_NO, CALENDAR_NAME, 
	    TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
	    TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT,
	    CALENDAR_TYPE
	FROM CALENDAR
	WHERE CALENDAR_TYPE = ${calendarType}
	AND ( TO_CHAR( START_DT, 'YYYY-MM-DD') IN(#{startDt}) OR TO_CHAR(END_DT, 'YYYY-MM-DD') IN(#{startDt}) 
	OR #{startDt} BETWEEN TO_CHAR( START_DT, 'YYYY-MM-DD') AND TO_CHAR(END_DT, 'YYYY-MM-DD') )
	</select>
	
	<!-- 일정 휴관일, 행사 일정 가져오기 -->
	<select id="getHECal" resultMap="calendar_rm">
		SELECT CALENDAR_NO, CALENDAR_NAME, 
		    TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
		    TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT,
		    CALENDAR_TYPE
		FROM CALENDAR
		WHERE CALENDAR_TYPE IN(2,3)
	</select>
	
	<!-- 일정 중 타입별 특정일 행사,휴관일 가져오기 -->
	<select id="selectGetDate" resultMap="calendar_rm">
		SELECT CALENDAR_NO, CALENDAR_NAME, 
	    TO_CHAR(START_DT,'YYYY-MM-DD') START_DT,
	    TO_CHAR(END_DT + 1,'YYYY-MM-DD') END_DT,
	    CALENDAR_TYPE
	FROM CALENDAR
	WHERE CALENDAR_TYPE IN(2,3)
	AND ( TO_CHAR( START_DT, 'YYYY-MM-DD') IN(#{date}) OR TO_CHAR(END_DT, 'YYYY-MM-DD') IN(#{date}) 
	OR #{date} BETWEEN TO_CHAR( START_DT, 'YYYY-MM-DD') AND TO_CHAR(END_DT, 'YYYY-MM-DD') )
	</select>
	
	<!-- 특정 일정 삭제 -->
	<delete id="deleteShedule">
		DELETE FROM CALENDAR WHERE CALENDAR_NO = ${calNo}
	</delete>
	
	<!-- 특정 일정 추가 -->
	<insert id="insertShedule">
		INSERT INTO CALENDAR VALUES(SEQ_CALENDAR_NO.NEXTVAL, #{calendarName} , #{startDt}, #{endDt}, ${calendarType})
	</insert>
	
	<!-- 특정 일정 수정 -->
	<update id="updateShedule">
		UPDATE CALENDAR SET 
		    CALENDAR_NAME = #{calendarName},
		    START_DT = #{startDt},
		    END_DT = #{endDt} ,
		    CALENDAR_TYPE = ${calendarType}
		WHERE CALENDAR_NO = ${calendarNo}
	</update>
	
	
</mapper>
