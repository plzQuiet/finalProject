<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="classMapper">

	<resultMap type="Class" id="class_rm">

		<id property="boardNo" column="BOARD_NO" />

		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="B_CREATE_DT" />
		<result property="boardUpdateDate" column="B_UPDATE_DT" />
		<result property="readCount" column="READ_COUNT" />
		<result property="boardDeleteFlag" column="BOARD_DEL_FL" />
		<result property="boardSecretFlag" column="BOARD_SC_FL" />

		<result property="commentCount" column="COMMENT_COUNT" />

		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />

		<result property="startDt" column="START_DT" />
		<result property="endDt" column="END_DT" />
		<result property="recruitmentStartDt" column="RECRUITMENT_START_DT" />
		<result property="recruitmentEndDt" column="RECRUITMENT_END_DT" />
		<result property="maxParticipant" column="MAX_PARTICIPANTS" />

		<result property="applicantCount" column="APPLICANT_COUNT" />
		
		
		<collection property="imageList"
       				 select="selectImageList"
       				 column="BOARD_NO"
       				 javaType="java.util.ArrayList"
       				 ofType="BoardImage">
       </collection>
		
	</resultMap>
	
	<resultMap type="BoardImage" id="boardImage_rm">
   
      <id property="imageNo" column="IMG_NO"/>
      
      <result property="boardNo" column="BOARD_NO"/>
      <result property="imagePath" column="IMG_PATH"/>
      <result property="imageOriginal" column="IMG_ORIGINAL"/>
      <result property="imageReName" column="IMG_RENAME"/>
      <result property="imageOrder" column="IMG_ORDER"/>

   </resultMap>



	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE CAT_CODE = ${cateCode}
		AND BOARD_DEL_FL = 'N'
	</select>

	<!-- 특정 게시판에서 현재 페이지에 해당하는 부분에 대한 게시글 목록 조회 -->
	<select id="selectClassBoard" resultMap="class_rm">
		SELECT BOARD_TITLE,B.BOARD_NO,
			TO_CHAR(RECRUITMENT_START_DT, 'YYYY-MM-DD') RECRUITMENT_START_DT,
			TO_CHAR(RECRUITMENT_END_DT, 'YYYY-MM-DD') RECRUITMENT_END_DT,
			MAX_PARTICIPANTS,
			(SELECT COUNT(*) FROM CLASS_PEOPLE C WHERE C.BOARD_NO = B.BOARD_NO ) APPLICANT_COUNT
		FROM BOARD B
		JOIN CLASS_SCHEDULE CS ON(CS.BOARD_NO = B.BOARD_NO)
		WHERE CAT_CODE = #{cateCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>

	<!-- 특정 게시판의 삭제되지 않고 검색 조건이 일치라는 게시글 수 조회 -->
	<select id="getListCountForSearch" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD

		<if test='key == "w"'>
			JOIN MEMBER USING (MEMBER_NO)
		</if>

		WHERE CAT_CODE = ${cateCode}
		AND BOARD_DEL_FL='N'

		<choose>
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key == "tc"'>
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT
				LIKE '%${query}%')
			</when>
			<when test='key == "w"'>
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>
	</select>

	<!-- 클래스 목록 조회(검색) -->
	<select id="selectBoardListForSearch" resultMap="class_rm">
		SELECT B.BOARD_NO, BOARD_TITLE,
		TO_CHAR(RECRUITMENT_START_DT, 'YYYY-MM-DD') RECRUITMENT_START_DT,
		TO_CHAR(RECRUITMENT_END_DT, 'YYYY-MM-DD') RECRUITMENT_END_DT,
		MAX_PARTICIPANTS,
		(SELECT COUNT(*) FROM CLASS_PEOPLE C WHERE C.BOARD_NO = B.BOARD_NO ) APPLICANT_COUNT
		FROM BOARD B
		JOIN CLASS_SCHEDULE CS ON(CS.BOARD_NO = B.BOARD_NO)
		WHERE CAT_CODE = #{cateCode}
		AND BOARD_DEL_FL = 'N'
		<choose>
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%${query}%'
			</when>

			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>

			<when test='key == "tc"'>
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
			</when>

		</choose>
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 클래스 상세 조회 -->
	<select id="selectClass" resultMap="class_rm">
		SELECT BOARD_NO, 
		       BOARD_TITLE, 
		       BOARD_CONTENT, 
		       CAT_CODE,
		       TO_CHAR(START_DT, 'YYYY-MM-DD') AS START_DT,
		       TO_CHAR(END_DT, 'YYYY-MM-DD') AS END_DT,
		       TO_CHAR(RECRUITMENT_START_DT, 'YYYY-MM-DD') AS RECRUITMENT_START_DT,
		       TO_CHAR(RECRUITMENT_END_DT, 'YYYY-MM-DD') AS RECRUITMENT_END_DT,
		       MEMBER_NO, MAX_PARTICIPANTS
		FROM BOARD       
		JOIN CLASS_SCHEDULE USING(BOARD_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_DEL_FL = 'N'
		  AND CAT_CODE = #{cateCode}
		  AND BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectImageList" resultMap="boardImage_rm">
		SELECT * FROM BOARD_IMG
		WHERE BOARD_NO=#{boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	<!-- 클래스 내용 작성 -->
	<insert id="classInsert" parameterType="Class" useGeneratedKeys="true">
	
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		
        INSERT INTO BOARD
        	VALUES( #{boardNo}, #{memberNo}, 12, #{boardTitle}, #{boardContent}
        			, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT )
	</insert>
	
	<!-- 클래스 일정 작성 -->
	<insert id="insertClassSchedule" parameterType="Class">
	    INSERT INTO CLASS_SCHEDULE
	     VALUES ( #{boardNo}, #{startDt}, #{endDt},
	     		 #{recruitmentStartDt}, #{recruitmentEndDt}, #{maxParticipant})
	</insert>
		
	<!-- 클래스 이미지 작성 -->
	<insert id="insertClassImage" parameterType="BoardImage">
		 INSERT INTO  BOARD_IMG
	      VALUES( SEQ_IMG_NO.NEXTVAL, #{boardNo}, #{imagePath},
	              #{imageOriginal}, #{imageReName}, #{imageOrder} ) 	
	</insert>
	
	
	<!-- 클래스 삭제 -->
	<update id="classDelete" parameterType="Class">
		UPDATE BOARD SET
		BOARD_DEL_FL = 'Y'
		WHERE CAT_CODE = #{cateCode}
		AND BOARD_NO = #{boardNo}
	</update>
	
	<!-- 클래스 신청 -->
	<insert id="applyClass" parameterType="map">
		INSERT INTO CLASS_PEOPLE
			VALUES(#{memberNo}, #{boardNo})
	</insert>
	
	 <!-- 신청 여부 확인 -->
    <select id="checkApplyClass" parameterType="map" resultType="_int">
        SELECT COUNT(*)
        FROM CLASS_PEOPLE
        WHERE MEMBER_NO = #{memberNo}
        AND BOARD_NO = #{boardNo}
    </select>
    
    <!-- 클래스 제목, 내용 업데이트 -->
    <update id="classUpdate">
    	UPDATE BOARD SET
		BOARD_TITLE = #{boardTitle}
		, BOARD_CONTENT = #{boardContent}
		, B_UPDATE_DT = SYSDATE
		WHERE CAT_CODE = 12
		AND BOARD_NO = #{boardNo}
    </update>
    
    <!-- 클래스 '일정' 수정 -->
    <update id="updateClassSchedule">
    	UPDATE CLASS_SCHEDULE SET
    	START_DT = #{startDt},
    	END_DT =  #{endDt},
    	RECRUITMENT_START_DT = #{recruitmentStartDt},
    	RECRUITMENT_END_DT = #{recruitmentEndDt},
    	MAX_PARTICIPANTS = #{maxParticipant}
    	WHERE BOARD_NO = #{boardNo}
    </update>
	
	<!-- deleteList 이미지 삭제 -->
	<delete id="imageDelete">
		DELETE FROM BOARD_IMG
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER IN ( ${deleteList} )
	</delete>
	
	<!-- 클래스 '이미지' 수정 -->
	<update id="updateClassImage">
		UPDATE BOARD_IMG SET
		IMG_RENAME = #{imageReName},
		IMG_ORIGINAL = #{imageOriginal}
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = #{imageOrder}
	</update>
	
	<!-- 이미지 리스트 삽입 -->
	<insert id="insertImageList" parameterType="list">
		INSERT INTO BOARD_IMG
		SELECT SEQ_IMG_NO.NEXTVAL, A.*
		FROM (
		
			<foreach collection="list" item="img" separator=" UNION ALL ">
				SELECT 
				#{img.boardNo} BOARD_NO, 
				#{img.imagePath} IMG_PATH,
				#{img.imageOriginal} IMG_ORIGINAL, 
				#{img.imageReName} IMG_RENAME,
				#{img.imageOrder} IMG_ORDER
				FROM DUAL
			</foreach>
		)A
	
	</insert>
	


</mapper>
